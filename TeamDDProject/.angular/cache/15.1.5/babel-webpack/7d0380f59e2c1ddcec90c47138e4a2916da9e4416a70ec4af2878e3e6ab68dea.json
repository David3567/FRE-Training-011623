{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/authService/auth-service.service\";\nimport * as i2 from \"@angular/router\";\nexport class LoginGuardGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const jwtToken = localStorage.getItem('accessToken');\n    if (jwtToken == null) {\n      console.log('jwtToken is null');\n      return true;\n    } else {\n      console.log('login-guard work');\n      this.router.navigate(['/home']);\n      return false;\n    }\n  }\n}\nLoginGuardGuard.ɵfac = function LoginGuardGuard_Factory(t) {\n  return new (t || LoginGuardGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nLoginGuardGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginGuardGuard,\n  factory: LoginGuardGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAcA,OAAM,MAAOA,eAAe;EAC1BC,YACmBC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;EACtB;EACHC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACpD,IAAIF,QAAQ,IAAI,IAAI,EAAE;MACpBG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,OAAO,IAAI;KACZ,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AAtBWZ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAa,SAAfb,eAAe;EAAAc,YAFd;AAAM","names":["LoginGuardGuard","constructor","authService","router","canActivate","route","state","jwtToken","localStorage","getItem","console","log","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/xinyiwu/Workplace/beifen/FRE-Training-011623/TeamDDProject/src/app/guards/login-guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/authService/auth-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginGuardGuard implements CanActivate {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly router: Router\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    const jwtToken = localStorage.getItem('accessToken');\n    if (jwtToken == null) {\n      console.log('jwtToken is null');\n      return true;\n    } else {\n      console.log('login-guard work');\n      this.router.navigate(['/home']);\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}