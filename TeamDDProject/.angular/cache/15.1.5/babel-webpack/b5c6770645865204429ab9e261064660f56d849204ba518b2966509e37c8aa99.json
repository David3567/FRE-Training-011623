{"ast":null,"code":"import { of, delay } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./movieService/movie-service.service\";\nexport class MovieDetailsResolver {\n  constructor(router, movieService) {\n    this.router = router;\n    this.movieService = movieService;\n  }\n  resolve(route, state) {\n    console.log('MovieDetailsResolver  called');\n    const id = route.paramMap.get('id');\n    if (!id) return of(null);\n    return this.movieService.getMovieDetails(id).pipe(delay(2000));\n  }\n}\nMovieDetailsResolver.ɵfac = function MovieDetailsResolver_Factory(t) {\n  return new (t || MovieDetailsResolver)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.MovieServiceService));\n};\nMovieDetailsResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MovieDetailsResolver,\n  factory: MovieDetailsResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAOA,SAA0BA,EAAE,EAAEC,KAAK,QAAQ,MAAM;;;;AAMjD,OAAM,MAAOC,oBAAoB;EAC/BC,YAAoBC,MAAc,EAAUC,YAAiC;IAAzD,WAAM,GAAND,MAAM;IAAkB,iBAAY,GAAZC,YAAY;EAAyB;EAEjFC,OAAO,CACLC,KAA6B,EAC7BC,KAA0B;IAE1BC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,MAAMC,EAAE,GAAGJ,KAAK,CAACK,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACnC,IAAI,CAACF,EAAE,EAAE,OAAOX,EAAE,CAAC,IAAI,CAAC;IACxB,OAAO,IAAI,CAACK,YAAY,CAACS,eAAe,CAACH,EAAE,CAAC,CAACI,IAAI,CAACd,KAAK,CAAC,IAAI,CAAC,CAAC;EAChE;;AAXWC,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;SAApBA,oBAAoB;EAAAc,SAApBd,oBAAoB;EAAAe,YAFnB;AAAM","names":["of","delay","MovieDetailsResolver","constructor","router","movieService","resolve","route","state","console","log","id","paramMap","get","getMovieDetails","pipe","factory","providedIn"],"sourceRoot":"","sources":["/Users/xinyiwu/Workplace/beifen/FRE-Training-011623/TeamDDProject/src/app/services/movie-details.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Router,\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot,\n} from '@angular/router';\nimport { map, Observable, of, delay } from 'rxjs';\nimport { MovieServiceService } from './movieService/movie-service.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MovieDetailsResolver implements Resolve<boolean> {\n  constructor(private router: Router, private movieService: MovieServiceService) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> {\n    console.log('MovieDetailsResolver  called');\n    const id = route.paramMap.get('id');\n    if (!id) return of(null);\n    return this.movieService.getMovieDetails(id).pipe(delay(2000));\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}