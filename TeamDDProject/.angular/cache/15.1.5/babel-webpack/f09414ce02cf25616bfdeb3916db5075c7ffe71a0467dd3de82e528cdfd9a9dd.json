{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterOneComponent = class RegisterOneComponent {\n  constructor(router, formBuilder, http, authService, customValidator) {\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.authService = authService;\n    this.customValidator = customValidator;\n  }\n  get email() {\n    return this.registerForm1.get('email');\n  }\n  get password() {\n    return this.registerForm1.get('password');\n  }\n  ngOnInit() {\n    this.registerForm1 = this.formBuilder.group({\n      email: [this.authService.addNewUser.email, [Validators.email, Validators.required], [this.customValidator.emailExists(this)]],\n      password: ['', [Validators.required]]\n    });\n  }\n  onNext() {\n    console.log(this.registerForm1.value);\n    this.authService.setNewUser(this.registerForm1.value);\n    this.router.navigate(['/register/2']);\n  }\n};\nRegisterOneComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register-one.component.html',\n  styleUrls: ['./register-one.component.css']\n})], RegisterOneComponent);\nexport { RegisterOneComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAIEC,UAAU,QACL,gBAAgB;AAWhB,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YACUC,MAAc,EACdC,WAAwB,EACxBC,IAAgB,EAChBC,WAAwB,EACxBC,eAAgC;IAJhC,WAAM,GAANJ,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IACJ,gBAAW,GAAXC,WAAW;IACX,oBAAe,GAAfC,eAAe;EACtB;EACH,IAAIC,KAAK;IACP,OAAO,IAAI,CAACC,aAAa,CAACC,GAAG,CAAC,OAAO,CAAgB;EACvD;EAEA,IAAIC,QAAQ;IACV,OAAO,IAAI,CAACF,aAAa,CAACC,GAAG,CAAC,UAAU,CAAgB;EAC1D;EAEAE,QAAQ;IACN,IAAI,CAACH,aAAa,GAAG,IAAI,CAACL,WAAW,CAACS,KAAK,CAAC;MAC1CL,KAAK,EAAE,CACL,IAAI,CAACF,WAAW,CAACQ,UAAU,CAACN,KAAK,EACjC,CAACR,UAAU,CAACQ,KAAK,EAAER,UAAU,CAACe,QAAQ,CAAC,EACvC,CAAC,IAAI,CAACR,eAAe,CAACS,WAAW,CAAC,IAAI,CAAC,CAAC,CACzC;MACDL,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACe,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,MAAM;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,aAAa,CAACW,KAAK,CAAC;IACrC,IAAI,CAACd,WAAW,CAACe,UAAU,CAAC,IAAI,CAACZ,aAAa,CAACW,KAAK,CAAC;IACrD,IAAI,CAACjB,MAAM,CAACmB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;EACvC;CAKD;AAvCYrB,oBAAoB,eALhCF,SAAS,CAAC;EACTwB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWxB,oBAAoB,CAuChC;SAvCYA,oBAAoB","names":["Component","Validators","RegisterOneComponent","constructor","router","formBuilder","http","authService","customValidator","email","registerForm1","get","password","ngOnInit","group","addNewUser","required","emailExists","onNext","console","log","value","setNewUser","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/xinyiwu/Workplace/beifen/FRE-Training-011623/TeamDDProject/src/app/pages/register/register-one/register-one.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/app/services/authService/auth-service.service';\nimport { CustomValidator } from 'src/app/services/custom.validator';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register-one.component.html',\n  styleUrls: ['./register-one.component.css'],\n})\nexport class RegisterOneComponent implements OnInit {\n  registerForm1!: FormGroup;\n  isLoading: false | undefined;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private authService: AuthService,\n    private customValidator: CustomValidator\n  ) {}\n  get email() {\n    return this.registerForm1.get('email') as FormControl;\n  }\n\n  get password() {\n    return this.registerForm1.get('password') as FormControl;\n  }\n\n  ngOnInit() {\n    this.registerForm1 = this.formBuilder.group({\n      email: [\n        this.authService.addNewUser.email,\n        [Validators.email, Validators.required],\n        [this.customValidator.emailExists(this)],\n      ],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  onNext() {\n    console.log(this.registerForm1.value);\n    this.authService.setNewUser(this.registerForm1.value);\n    this.router.navigate(['/register/2']);\n  }\n\n  // onSubmit() {\n  //   console.log(this.registerForm1.value);\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}