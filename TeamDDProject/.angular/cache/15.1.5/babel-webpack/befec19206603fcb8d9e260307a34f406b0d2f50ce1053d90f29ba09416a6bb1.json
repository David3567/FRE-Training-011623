{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:4231/api/auth';\n    this.addNewUser = {\n      username: '',\n      password: '',\n      email: '',\n      role: '',\n      tmdb_key: ''\n    };\n  }\n  //   checkEmail(email: any): Observable<boolean> {\n  //     const url = `${this.apiUrl}/check-email`;\n  //     return this.http.post<boolean>(url, { email });\n  //   }\n  registerUser(userSubInfo) {\n    const url = `${this.apiUrl}/signup`;\n    return this.http.post(url, userSubInfo);\n  }\n  setNewUser(userSubInfo) {\n    console.log(userSubInfo);\n    console.log('Setting new user');\n    this.addNewUser = {\n      ...this.addNewUser,\n      ...userSubInfo\n    };\n    console.log(this.setNewUser);\n  }\n  clearNewUser() {\n    this.addNewUser = {\n      username: '',\n      password: '',\n      email: '',\n      role: '',\n      tmdb_key: ''\n    };\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,WAAW;EAUtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAThB,WAAM,GAAG,gCAAgC;IAC1C,eAAU,GAAe;MAC9BC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE;KACX;EAEsC;EAEvC;EACA;EACA;EACA;EAEAC,YAAY,CAACC,WAAwB;IACnC,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,MAAM,SAAS;IACnC,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAMF,GAAG,EAAED,WAAW,CAAC;EAC9C;EAEAI,UAAU,CAACJ,WAAwB;IACjCK,OAAO,CAACC,GAAG,CAACN,WAAW,CAAC;IACxBK,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,IAAI,CAACC,UAAU,GAAG;MAChB,GAAG,IAAI,CAACA,UAAU;MAClB,GAAGP;KACJ;IACDK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,UAAU,CAAC;EAC9B;EAEAI,YAAY;IACV,IAAI,CAACD,UAAU,GAAG;MAChBb,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE;KACX;EACH;;AAxCWP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["AuthService","constructor","http","username","password","email","role","tmdb_key","registerUser","userSubInfo","url","apiUrl","post","setNewUser","console","log","addNewUser","clearNewUser","factory","providedIn"],"sourceRoot":"","sources":["/Users/xinyiwu/Workplace/beifen/FRE-Training-011623/TeamDDProject/src/app/services/authService/auth-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map, timestamp } from 'rxjs/operators';\nimport { AddNewUser, UserSubInfo } from '../interface/user-interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:4231/api/auth';\n  public addNewUser: AddNewUser = {\n    username: '',\n    password: '',\n    email: '',\n    role: '',\n    tmdb_key: '',\n  };\n\n  constructor(private http: HttpClient) {}\n\n  //   checkEmail(email: any): Observable<boolean> {\n  //     const url = `${this.apiUrl}/check-email`;\n  //     return this.http.post<boolean>(url, { email });\n  //   }\n\n  registerUser(userSubInfo: UserSubInfo): Observable<any> {\n    const url = `${this.apiUrl}/signup`;\n    return this.http.post<any>(url, userSubInfo);\n  }\n\n  setNewUser(userSubInfo: UserSubInfo) {\n    console.log(userSubInfo);\n    console.log('Setting new user');\n    this.addNewUser = {\n      ...this.addNewUser,\n      ...userSubInfo,\n    };\n    console.log(this.setNewUser);\n  }\n\n  clearNewUser() {\n    this.addNewUser = {\n      username: '',\n      password: '',\n      email: '',\n      role: '',\n      tmdb_key: '',\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}