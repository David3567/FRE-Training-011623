{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"src/app/services/authService/auth-service.service\";\nimport * as i5 from \"src/app/services/custom.validator\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../../shared/nav-bar/nav-bar.component\";\nfunction RegisterOneComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8);\n    i0.ɵɵtext(2, \" Email is required \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" \\u00A0 \");\n    i0.ɵɵelementStart(4, \"div\", 8);\n    i0.ɵɵtext(5, \" Invalid email format \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 8);\n    i0.ɵɵtext(7, \" Email already exists \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !((tmp_0_0 = ctx_r0.registerForm1.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"hidden\", !((tmp_1_0 = ctx_r0.registerForm1.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !((tmp_2_0 = ctx_r0.registerForm1.get(\"email\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"emailExists\"]));\n  }\n}\nfunction RegisterOneComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8);\n    i0.ɵɵtext(2, \" password is required \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !((tmp_0_0 = ctx_r1.registerForm1.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]));\n  }\n}\nexport class RegisterOneComponent {\n  constructor(router, formBuilder, http, authService, customValidator) {\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.authService = authService;\n    this.customValidator = customValidator;\n  }\n  get email() {\n    return this.registerForm1.get('email');\n  }\n  get password() {\n    return this.registerForm1.get('password');\n  }\n  ngOnInit() {\n    this.registerForm1 = this.formBuilder.group({\n      email: [this.authService.addNewUser.email, [Validators.email, Validators.required], [this.customValidator.emailExists(this)]],\n      password: ['', [Validators.required]]\n    });\n  }\n  onNext() {\n    console.log(this.registerForm1.value);\n    this.authService.setNewUser(this.registerForm1.value);\n    this.router.navigate(['/register/2']);\n  }\n}\nRegisterOneComponent.ɵfac = function RegisterOneComponent_Factory(t) {\n  return new (t || RegisterOneComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.CustomValidator));\n};\nRegisterOneComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterOneComponent,\n  selectors: [[\"app-register\"]],\n  decls: 24,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"form\"], [1, \"userInputContainer\"], [\"novalidate\", \"\", 3, \"formGroup\", \"click\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email or phone number *\"], [4, \"ngIf\"], [\"type\", \"text\", \"id\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"password or phone number *\"], [\"type\", \"submit\", 1, \"nextButton\", 3, \"disabled\"], [3, \"hidden\"]],\n  template: function RegisterOneComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-nav-bar\");\n      i0.ɵɵelementStart(2, \"form\", 1)(3, \"p\");\n      i0.ɵɵtext(4, \"Step 1 of 3\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"h1\");\n      i0.ɵɵtext(6, \"Create a password to start your membership\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\");\n      i0.ɵɵtext(8, \"Just a few more steps and you're done!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"p\");\n      i0.ɵɵtext(10, \"We hate paperwork, too.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"form\", 3);\n      i0.ɵɵlistener(\"click\", function RegisterOneComponent_Template_form_click_13_listener() {\n        return ctx.onNext();\n      });\n      i0.ɵɵelementStart(14, \"p\");\n      i0.ɵɵelement(15, \"input\", 4)(16, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, RegisterOneComponent_div_17_Template, 8, 3, \"div\", 5);\n      i0.ɵɵelementStart(18, \"p\");\n      i0.ɵɵelement(19, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, RegisterOneComponent_div_20_Template, 3, 1, \"div\", 5);\n      i0.ɵɵelementStart(21, \"p\")(22, \"button\", 7);\n      i0.ɵɵtext(23, \"Next\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm1);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.registerForm1.get(\"email\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.registerForm1.get(\"email\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx.registerForm1.get(\"email\")) == null ? null : tmp_1_0.touched)));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.registerForm1.get(\"password\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.registerForm1.get(\"password\")) == null ? null : tmp_2_0.dirty) || ((tmp_2_0 = ctx.registerForm1.get(\"password\")) == null ? null : tmp_2_0.touched)));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.registerForm1.valid);\n    }\n  },\n  dependencies: [i6.NgIf, i7.NavBarComponent, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n  height: 100%\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  display: table;\\n  margin: 0 auto;\\n  width: 400px;\\n  margin-top: 50px;\\n}\\n\\nform[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  display: flex;\\n  font-size: medium;\\n}\\n\\nform[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  display: flex;\\n  font-size: 2rem;\\n}\\n\\nform[_ngcontent-%COMP%]   label[_ngcontent-%COMP%], form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  display: table-cell;\\n  margin-bottom: 10px;\\n}\\n\\nform[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  width: 200px;\\n  padding-right: 5%;\\n  text-align: left;\\n  font-size: small;\\n  font-weight: 500;\\n}\\n\\nform[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 400px;\\n  height: 6vh;\\n  border-radius: 0.3vmin;\\n  border-width: 0.1ch;\\n}\\n\\n.input[_ngcontent-%COMP%]::-webkit-input-placeholder {\\n  position: relative;\\n  left: 0.5re, ;\\n}\\n\\n.nextButton[_ngcontent-%COMP%] {\\n  height: 6vh;\\n  width: 100%;\\n  color: aliceblue;\\n  font-size: 1.5rem;\\n  border-radius: 4px;\\n  border: 0px;\\n  background-color: rgb(178, 0, 0);\\n}\\n\\n.userInputContainer[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXItb25lL3JlZ2lzdGVyLW9uZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFO0FBQ0Y7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsY0FBYztFQUNkLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7QUFDakI7O0FBRUE7O0VBRUUsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLHNCQUFzQjtFQUN0QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsV0FBVztFQUNYLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJodG1sLFxuYm9keSB7XG4gIGhlaWdodDogMTAwJVxufVxuXG5mb3JtIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogNDAwcHg7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG59XG5cbmZvcm0gcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZvbnQtc2l6ZTogbWVkaXVtO1xufVxuXG5mb3JtIGgxIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZm9udC1zaXplOiAycmVtO1xufVxuXG5mb3JtIGxhYmVsLFxuZm9ybSBpbnB1dCB7XG4gIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbmZvcm0gbGFiZWwge1xuICB3aWR0aDogMjAwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDUlO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IHNtYWxsO1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG5mb3JtIGlucHV0IHtcbiAgd2lkdGg6IDQwMHB4O1xuICBoZWlnaHQ6IDZ2aDtcbiAgYm9yZGVyLXJhZGl1czogMC4zdm1pbjtcbiAgYm9yZGVyLXdpZHRoOiAwLjFjaDtcbn1cblxuLmlucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwLjVyZSwgO1xufVxuXG4ubmV4dEJ1dHRvbiB7XG4gIGhlaWdodDogNnZoO1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6IGFsaWNlYmx1ZTtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiAwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNzgsIDAsIDApO1xufVxuXG4udXNlcklucHV0Q29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAIEA,UAAU,QACL,gBAAgB;;;;;;;;;;;ICWfC,2BAC4H;IAExHA,mCACF;IAAAA,iBAAM;IACNA,wBACA;IAAAA,8BAA+D;IAC7DA,sCACF;IAAAA,iBAAM;IAENA,8BAAqE;IACnEA,sCACF;IAAAA,iBAAM;;;;;;;IAVDA,eAA4D;IAA5DA,qJAA4D;IAI5DA,eAAyD;IAAzDA,kJAAyD;IAIzDA,eAA+D;IAA/DA,wJAA+D;;;;;IAUtEA,2BACqI;IAEjIA,sCACF;IAAAA,iBAAM;;;;;IAFDA,eAA+D;IAA/DA,wJAA+D;;;ADtB9E,OAAM,MAAOC,oBAAoB;EAI/BC,YACUC,MAAc,EACdC,WAAwB,EACxBC,IAAgB,EAChBC,WAAwB,EACxBC,eAAgC;IAJhC,WAAM,GAANJ,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IACJ,gBAAW,GAAXC,WAAW;IACX,oBAAe,GAAfC,eAAe;EACtB;EACH,IAAIC,KAAK;IACP,OAAO,IAAI,CAACC,aAAa,CAACC,GAAG,CAAC,OAAO,CAAgB;EACvD;EAEA,IAAIC,QAAQ;IACV,OAAO,IAAI,CAACF,aAAa,CAACC,GAAG,CAAC,UAAU,CAAgB;EAC1D;EAEAE,QAAQ;IACN,IAAI,CAACH,aAAa,GAAG,IAAI,CAACL,WAAW,CAACS,KAAK,CAAC;MAC1CL,KAAK,EAAE,CACL,IAAI,CAACF,WAAW,CAACQ,UAAU,CAACN,KAAK,EACjC,CAACT,UAAU,CAACS,KAAK,EAAET,UAAU,CAACgB,QAAQ,CAAC,EACvC,CAAC,IAAI,CAACR,eAAe,CAACS,WAAW,CAAC,IAAI,CAAC,CAAC,CACzC;MACDL,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACgB,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,MAAM;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,aAAa,CAACW,KAAK,CAAC;IACrC,IAAI,CAACd,WAAW,CAACe,UAAU,CAAC,IAAI,CAACZ,aAAa,CAACW,KAAK,CAAC;IACrD,IAAI,CAACjB,MAAM,CAACmB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;EACvC;;AAlCWrB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjBjC3B,8BAAuB;MACrBA,8BAA2B;MAC3BA,+BAAmB;MACdA,2BAAW;MAAAA,iBAAI;MAClBA,0BAAI;MAAAA,0DAA0C;MAAAA,iBAAK;MACnDA,yBAAG;MAAAA,sDAAsC;MAAAA,iBAAI;MAC7CA,yBAAG;MAAAA,wCAAuB;MAAAA,iBAAI;MAC9BA,sBAAI;MACJA,+BAAgC;MACIA;QAAA,OAAS4B,YAAQ;MAAA,EAAC;MAClD5B,0BAAG;MAEDA,4BAAyG;MAG3GA,iBAAI;MAEJA,uEAaM;MAENA,0BAAG;MAEDA,4BAC2C;MAC7CA,iBAAI;MACJA,uEAKM;MACNA,0BAAG;MAC0EA,qBAAI;MAAAA,iBAAS;;;;;MAnCtFA,gBAA2B;MAA3BA,6CAA2B;MAS5BA,eAAuH;MAAvHA,sQAAuH;MAoBvHA,eAAgI;MAAhIA,+QAAgI;MAMxFA,eAAiC;MAAjCA,mDAAiC","names":["Validators","i0","RegisterOneComponent","constructor","router","formBuilder","http","authService","customValidator","email","registerForm1","get","password","ngOnInit","group","addNewUser","required","emailExists","onNext","console","log","value","setNewUser","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/xinyiwu/Workplace/beifen/FRE-Training-011623/TeamDDProject/src/app/pages/register/register-one/register-one.component.ts","/Users/xinyiwu/Workplace/beifen/FRE-Training-011623/TeamDDProject/src/app/pages/register/register-one/register-one.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/app/services/authService/auth-service.service';\nimport { CustomValidator } from 'src/app/services/custom.validator';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register-one.component.html',\n  styleUrls: ['./register-one.component.css'],\n})\nexport class RegisterOneComponent implements OnInit {\n  registerForm1!: FormGroup;\n  isLoading: false | undefined;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private authService: AuthService,\n    private customValidator: CustomValidator\n  ) {}\n  get email() {\n    return this.registerForm1.get('email') as FormControl;\n  }\n\n  get password() {\n    return this.registerForm1.get('password') as FormControl;\n  }\n\n  ngOnInit() {\n    this.registerForm1 = this.formBuilder.group({\n      email: [\n        this.authService.addNewUser.email,\n        [Validators.email, Validators.required],\n        [this.customValidator.emailExists(this)],\n      ],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  onNext() {\n    console.log(this.registerForm1.value);\n    this.authService.setNewUser(this.registerForm1.value);\n    this.router.navigate(['/register/2']);\n  }\n\n  // onSubmit() {\n  //   console.log(this.registerForm1.value);\n  // }\n}\n","<div class=\"container\">\n  <app-nav-bar></app-nav-bar>\n  <form class=\"form\">\n    <p>Step 1 of 3</p>\n    <h1>Create a password to start your membership</h1>\n    <p>Just a few more steps and you're done!</p>\n    <p>We hate paperwork, too.</p>\n    <br>\n    <div class=\"userInputContainer\">\n      <form [formGroup]=\"registerForm1\" (click)=\"onNext()\" novalidate>\n        <p>\n          <!-- <label for=\"email\">Email </label> -->\n          <input type=\"text\" id=\"email\" name=\"email\" formControlName=\"email\" placeholder=\"Email or phone number *\">\n          <br>\n\n        </p>\n\n        <div\n          *ngIf=\"registerForm1.get('email')?.invalid && (registerForm1.get('email')?.dirty || registerForm1.get('email')?.touched)\">\n          <div [hidden]=\"!registerForm1.get('email')?.errors?.['required']\">\n            Email is required\n          </div>\n          &nbsp;\n          <div [hidden]=\"!registerForm1.get('email')?.errors?.['email']\">\n            Invalid email format\n          </div>\n\n          <div [hidden]=\"!registerForm1.get('email')?.errors?.['emailExists']\">\n            Email already exists\n          </div>\n        </div>\n\n        <p>\n          <!-- <label for=\"password\">Password </label> -->\n          <input type=\"text\" id=\"password\" name=\"password\" formControlName=\"password\"\n            placeholder=\"password or phone number *\">\n        </p>\n        <div\n          *ngIf=\"registerForm1.get('password')?.invalid && (registerForm1.get('password')?.dirty || registerForm1.get('password')?.touched)\">\n          <div [hidden]=\"!registerForm1.get('password')?.errors?.['required']\">\n            password is required\n          </div>\n        </div>\n        <p>\n          <button class=\"nextButton\" type=\"submit\" [disabled]=\"!registerForm1.valid\">Next</button>\n        </p>\n      </form>\n    </div>\n\n  </form>\n  <!-- <app-footer></app-footer> -->\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}