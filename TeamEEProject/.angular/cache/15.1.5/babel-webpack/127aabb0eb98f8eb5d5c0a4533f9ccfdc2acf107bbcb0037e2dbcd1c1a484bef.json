{"ast":null,"code":"import { BehaviorSubject, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_KEY = \"b2979efe3455e63e15acabc8179486e1\";\nexport class MoviesService {\n  //Lifecycle\n  constructor(http) {\n    this.http = http;\n    //Variables\n    this.movies$ = new BehaviorSubject([]);\n  }\n  //Methods\n  discoverMovies(options = {}) {\n    options = {\n      language: \"en-US\",\n      sort_by: \"popularity.desc\",\n      include_adult: false,\n      include_video: false,\n      page: 1,\n      ...options\n    };\n    const queryParams = Object.keys(options).map(key => `${key}=${options[key]}`).join(\"&\");\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&${queryParams}`;\n    return this.http.get(url).pipe(tap(movies => {\n      movies.results = movies.results?.map(movie => {\n        movie.poster_path = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n        movie.backdrop_path = `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`;\n        return movie;\n      });\n      this.movies$.next(movies.results);\n    }));\n  }\n  getUpcomingMovies(page = 1) {\n    const url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${page}`;\n    return this.http.get(url).pipe(tap(movies => this.movies$.next(movies.results)));\n  }\n  getLatestMovies(page = 1) {\n    const url = `https://api.themoviedb.org/3/movie/latest?api_key=${API_KEY}&language=en-US&page=${page}`;\n    return this.http.get(url).pipe(tap(movies => this.movies$.next(movies.results)));\n  }\n}\nMoviesService.ɵfac = function MoviesService_Factory(t) {\n  return new (t || MoviesService)(i0.ɵɵinject(i1.HttpClient));\n};\nMoviesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MoviesService,\n  factory: MoviesService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,EAAkBC,GAAG,QAAQ,MAAM;;;AAE3D,MAAMC,OAAO,GAAG,kCAAkC;AA2BlD,OAAM,MAAOC,aAAa;EAGxB;EACAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB;IACA,YAAO,GAAG,IAAIL,eAAe,CAAU,EAAE,CAAC;EAEH;EACvC;EACAM,cAAc,CAACC,UAAwD,EAAE;IACvEA,OAAO,GAAG;MACRC,QAAQ,EAAE,OAAO;MACjBC,OAAO,EAAE,iBAAiB;MAC1BC,aAAa,EAAE,KAAK;MACpBC,aAAa,EAAE,KAAK;MACpBC,IAAI,EAAE,CAAC;MACP,GAAGL;KACJ;IACD,MAAMM,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC,CACrCS,GAAG,CAAEC,GAAG,IAAK,GAAGA,GAAG,IAAIV,OAAO,CAACU,GAAG,CAAC,EAAE,CAAC,CACtCC,IAAI,CAAC,GAAG,CAAC;IACZ,MAAMC,GAAG,GAAG,uDAAuDjB,OAAO,IAAIW,WAAW,EAAE;IAC3F,OAAO,IAAI,CAACR,IAAI,CACbe,GAAG,CAAwBD,GAAG,CAAC,CAC/BE,IAAI,CACHpB,GAAG,CAAEqB,MAA6B,IAAI;MACpCA,MAAM,CAACC,OAAO,GAAGD,MAAM,CAACC,OAAO,EAAEP,GAAG,CAAEQ,KAAK,IAAI;QAC7CA,KAAK,CAACC,WAAW,GAAG,kCAAkCD,KAAK,CAACC,WAAW,EAAE;QACzED,KAAK,CAACE,aAAa,GAAG,uCAAuCF,KAAK,CAACE,aAAa,EAAE;QAClF,OAAOF,KAAK;MACd,CAAC,CAAC;MACF,IAAI,CAACG,OAAO,CAACC,IAAI,CAACN,MAAM,CAACC,OAAkB,CAAC;IAC9C,CAAC,CACA,CACF;EACL;EACAM,iBAAiB,CAACjB,OAAe,CAAC;IAChC,MAAMO,GAAG,GAAG,uDAAuDjB,OAAO,wBAAwBU,IAAI,EAAE;IACxG,OAAO,IAAI,CAACP,IAAI,CACbe,GAAG,CAAwBD,GAAG,CAAC,CAC/BE,IAAI,CACHpB,GAAG,CAAEqB,MAA6B,IAChC,IAAI,CAACK,OAAO,CAACC,IAAI,CAACN,MAAM,CAACC,OAAkB,CAAC,CAC7C,CACF;EACL;EACAO,eAAe,CAAClB,OAAe,CAAC;IAC9B,MAAMO,GAAG,GAAG,qDAAqDjB,OAAO,wBAAwBU,IAAI,EAAE;IACtG,OAAO,IAAI,CAACP,IAAI,CACbe,GAAG,CAAwBD,GAAG,CAAC,CAC/BE,IAAI,CACHpB,GAAG,CAAEqB,MAA6B,IAChC,IAAI,CAACK,OAAO,CAACC,IAAI,CAACN,MAAM,CAACC,OAAkB,CAAC,CAC7C,CACF;EACL;;AApDWpB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAA4B,SAAb5B,aAAa;EAAA6B,YAFZ;AAAM","names":["BehaviorSubject","tap","API_KEY","MoviesService","constructor","http","discoverMovies","options","language","sort_by","include_adult","include_video","page","queryParams","Object","keys","map","key","join","url","get","pipe","movies","results","movie","poster_path","backdrop_path","movies$","next","getUpcomingMovies","getLatestMovies","factory","providedIn"],"sourceRoot":"","sources":["/Users/yuxinfang/Downloads/angular-8z1wnn/FRE-Training-011623/TeamEEProject/src/app/movies.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { BehaviorSubject, pluck, Subject, tap } from \"rxjs\";\n\nconst API_KEY = \"b2979efe3455e63e15acabc8179486e1\";\n\nexport interface Movie {\n  adult: boolean;\n  backdrop_path: string;\n  genre_ids?: number[] | null;\n  id: number;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n\nexport interface MoviesServiceResponse {\n  page: number;\n  results?: Movie[] | null;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MoviesService {\n  //Variables\n  movies$ = new BehaviorSubject<Movie[]>([]);\n  //Lifecycle\n  constructor(private http: HttpClient) {}\n  //Methods\n  discoverMovies(options: { [key: string]: string | number | boolean } = {}) {\n    options = {\n      language: \"en-US\",\n      sort_by: \"popularity.desc\",\n      include_adult: false,\n      include_video: false,\n      page: 1,\n      ...options,\n    };\n    const queryParams = Object.keys(options)\n      .map((key) => `${key}=${options[key]}`)\n      .join(\"&\");\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&${queryParams}`;\n    return this.http\n      .get<MoviesServiceResponse>(url)\n      .pipe(\n        tap((movies: MoviesServiceResponse) => {\n          movies.results = movies.results?.map((movie) => {\n            movie.poster_path = `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n            movie.backdrop_path = `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`\n            return movie\n          })\n          this.movies$.next(movies.results as Movie[])\n        }\n        )\n      )\n  }\n  getUpcomingMovies(page: number = 1) {\n    const url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${page}`;\n    return this.http\n      .get<MoviesServiceResponse>(url)\n      .pipe(\n        tap((movies: MoviesServiceResponse) =>\n          this.movies$.next(movies.results as Movie[])\n        )\n      )\n  }\n  getLatestMovies(page: number = 1) {\n    const url = `https://api.themoviedb.org/3/movie/latest?api_key=${API_KEY}&language=en-US&page=${page}`;\n    return this.http\n      .get<MoviesServiceResponse>(url)\n      .pipe(\n        tap((movies: MoviesServiceResponse) =>\n          this.movies$.next(movies.results as Movie[])\n        )\n      )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}