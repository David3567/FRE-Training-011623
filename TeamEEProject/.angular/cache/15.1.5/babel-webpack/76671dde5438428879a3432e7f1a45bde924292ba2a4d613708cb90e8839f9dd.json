{"ast":null,"code":"import { Subject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_KEY = \"b2979efe3455e63e15acabc8179486e1\";\nexport class MoviesService {\n  getLatestMovies() {\n    const url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`;\n    return this.http.get(url).pipe(tap(movies => this.movies$.next(movies.results))).subscribe();\n  }\n  constructor(http) {\n    this.http = http;\n    this.movies$ = new Subject();\n  }\n}\nMoviesService.ɵfac = function MoviesService_Factory(t) {\n  return new (t || MoviesService)(i0.ɵɵinject(i1.HttpClient));\n};\nMoviesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MoviesService,\n  factory: MoviesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAgBA,OAAO,EAAEC,GAAG,QAAQ,MAAM;;;AAE1C,MAAMC,OAAO,GAAG,kCAAkC;AA2BlD,OAAM,MAAOC,aAAa;EAIxBC,eAAe;IACb,MAAMC,GAAG,GAAG,uDAAuDH,OAAO,wBAAwB;IAClG,OAAO,IAAI,CAACI,IAAI,CAACC,GAAG,CAAwBF,GAAG,CAAC,CAACG,IAAI,CACnDP,GAAG,CAAEQ,MAA6B,IAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC,CAAC,CAC3E,CAACC,SAAS,EAAE;EACf;EACAC,YAAoBR,IAAe;IAAf,SAAI,GAAJA,IAAI;IARxB,YAAO,GAAG,IAAIN,OAAO,EAAS;EAU9B;;AAZWG,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAY,SAAbZ,aAAa;EAAAa,YAFZ;AAAM","names":["Subject","tap","API_KEY","MoviesService","getLatestMovies","url","http","get","pipe","movies","movies$","next","results","subscribe","constructor","factory","providedIn"],"sourceRoot":"","sources":["/Users/neighborolive/Documents/Work/Antra/first-project/TeamEEProject/src/app/movies.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { pluck, Subject, tap } from 'rxjs';\n\nconst API_KEY = \"b2979efe3455e63e15acabc8179486e1\"\n\nexport interface Movie {\n    adult: boolean;\n    backdrop_path: string;\n    genre_ids?: (number)[] | null;\n    id: number;\n    original_language: string;\n    original_title: string;\n    overview: string;\n    popularity: number;\n    poster_path: string;\n    release_date: string;\n    title: string;\n    video: boolean;\n    vote_average: number;\n    vote_count: number;\n  }\n\nexport interface MoviesServiceResponse {\n    page: number;\n    results?: (Movie)[] | null;\n  }\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoviesService {\n\n  movies$ = new Subject<Movie>();\n\n  getLatestMovies() { \n    const url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=1`\n    return this.http.get<MoviesServiceResponse>(url).pipe(\n      tap((movies: MoviesServiceResponse ) => this.movies$.next(movies.results))\n    ).subscribe()\n  }\n  constructor(private http:HttpClient) {\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}