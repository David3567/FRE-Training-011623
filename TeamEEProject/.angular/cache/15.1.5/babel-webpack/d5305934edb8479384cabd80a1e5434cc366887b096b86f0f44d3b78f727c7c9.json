{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../navbar/navbar.component\";\nfunction SearchBarComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SearchBarComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" Please input a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SearchBarComponent_div_13_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" This email is already exist, try another one! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SearchBarComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SearchBarComponent_div_13_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, SearchBarComponent_div_13_div_2_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(3, SearchBarComponent_div_13_div_3_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.email.errors == null ? null : ctx_r0.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.email.errors == null ? null : ctx_r0.email.errors[\"pattern\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.email.errors == null ? null : ctx_r0.email.errors[\"hasEmail\"]);\n  }\n}\nexport class SearchBarComponent {\n  get email() {\n    return this.form.get(\"email\");\n  }\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n  }\n  // if we have backend, adding another validator [this.checkEmail.bind(this)]\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: [\"\", [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)]]\n    });\n  }\n  // checkEmail(control: AbstractControl): Observable<ValidationErrors | null> {\n  //   const val = control.value;\n  //   const url = 'http://localhost:4231/auth/check-email';\n  //   return this.http.post(url, { email:val }).pipe(\n  //     debounceTime(500),\n  //     map((data:any) => {\n  //       console.log(data)\n  //       if (data) {\n  //         return {hasEmail: true};\n  //       }\n  //       return null;\n  //     })\n  //   );\n  // }\n  onSubmit() {\n    console.log();\n  }\n}\nSearchBarComponent.ɵfac = function SearchBarComponent_Factory(t) {\n  return new (t || SearchBarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nSearchBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchBarComponent,\n  selectors: [[\"app-search-bar\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"search-box\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"placeholder\", \"Email address\"], [4, \"ngIf\"], [\"class\", \"invalid\", 4, \"ngIf\"], [1, \"invalid\"]],\n  template: function SearchBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"app-navbar\");\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"h1\");\n      i0.ɵɵtext(4, \"Unlimited movies, TV shows, and more.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"h2\");\n      i0.ɵɵtext(6, \"Watch anywhere. Cancel anytime.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\");\n      i0.ɵɵtext(8, \"Ready to watch? Enter your email to create or reset your membership.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function SearchBarComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelement(10, \"input\", 3);\n      i0.ɵɵelementStart(11, \"button\");\n      i0.ɵɵtext(12, \"Get Started >\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, SearchBarComponent_div_13_Template, 4, 3, \"div\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.email.valid && (ctx.email.dirty || ctx.email.touched));\n    }\n  },\n  dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.NavbarComponent],\n  styles: [\".container[_ngcontent-%COMP%] {\\n    position: relative;\\n    width: 100%;\\n    height: 1000px;\\n    background-image: linear-gradient(to top,rgba(0, 0, 0, 0.85) 0, rgba(0, 0, 0, 0.4) 60%, rgba(0, 0, 0, 0.85) 100%),\\n    url('https://assets.nflxext.com/ffe/siteui/vlv3/3d6cf7c4-ad17-457a-b6cf-ea952926ba74/1e8677dc-8384-41ce-8bf0-99284008466a/US-en-20230206-popsignuptwoweeks-perspective_alpha_website_small.jpg');\\n    background-repeat: no-repeat; \\n    background-size: cover;\\n}\\n\\n.search-box[_ngcontent-%COMP%]{\\n    position: absolute;\\n    left: 50%;\\n    top: 46%;\\n    white-space: nowrap;\\n    transform: translate(-50%,-50%);\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n    font-size: 3rem;\\n    font-weight: bold;\\n}\\nh2[_ngcontent-%COMP%] {\\n    font-size:1.7rem;\\n}\\np[_ngcontent-%COMP%] {\\n    font-size: 1.2rem;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n    width: 60%;\\n    padding-left: 20%;\\n}\\n\\ninput[_ngcontent-%COMP%]{\\n    width: 400px;\\n    height: 60px;\\n    border-top-left-radius: 8px;\\n    border:black;\\n    font-size: 19px;\\n    padding-left: 12px;\\n}\\nbutton[_ngcontent-%COMP%] {\\n    width: 140px;\\n    height:65px;\\n    background-color: red;\\n    color: white;\\n    font-size: 17px;\\n    font-weight: bold;\\n    border-bottom-right-radius: 8px;\\n    \\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    background-color: rgb(186, 7, 7);\\n}\\n\\n.invalid[_ngcontent-%COMP%] {\\n    color:red;\\n    font-size: 19.6px;\\n    text-align: left;\\n    padding-left: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VhcmNoLWJhci9zZWFyY2gtYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLGNBQWM7SUFDZDtvTUFDZ007SUFDaE0sNEJBQTRCLEVBQUUsNEJBQTRCO0lBQzFELHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsUUFBUTtJQUNSLG1CQUFtQjtJQUNuQiwrQkFBK0I7QUFDbkM7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osWUFBWTtJQUNaLDJCQUEyQjtJQUMzQixZQUFZO0lBQ1osZUFBZTtJQUNmLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxxQkFBcUI7SUFDckIsWUFBWTtJQUNaLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsK0JBQStCO0lBQy9CLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLFNBQVM7SUFDVCxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMDBweDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gdG9wLHJnYmEoMCwgMCwgMCwgMC44NSkgMCwgcmdiYSgwLCAwLCAwLCAwLjQpIDYwJSwgcmdiYSgwLCAwLCAwLCAwLjg1KSAxMDAlKSxcbiAgICB1cmwoJ2h0dHBzOi8vYXNzZXRzLm5mbHhleHQuY29tL2ZmZS9zaXRldWkvdmx2My8zZDZjZjdjNC1hZDE3LTQ1N2EtYjZjZi1lYTk1MjkyNmJhNzQvMWU4Njc3ZGMtODM4NC00MWNlLThiZjAtOTkyODQwMDg0NjZhL1VTLWVuLTIwMjMwMjA2LXBvcHNpZ251cHR3b3dlZWtzLXBlcnNwZWN0aXZlX2FscGhhX3dlYnNpdGVfc21hbGwuanBnJyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgLyogRG8gbm90IHJlcGVhdCB0aGUgaW1hZ2UgKi9cbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4uc2VhcmNoLWJveHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRvcDogNDYlO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcbn1cblxuaDEge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cbmgyIHtcbiAgICBmb250LXNpemU6MS43cmVtO1xufVxucCB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG59XG5cbmZvcm0ge1xuICAgIHdpZHRoOiA2MCU7XG4gICAgcGFkZGluZy1sZWZ0OiAyMCU7XG59XG5cbmlucHV0e1xuICAgIHdpZHRoOiA0MDBweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogOHB4O1xuICAgIGJvcmRlcjpibGFjaztcbiAgICBmb250LXNpemU6IDE5cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAxMnB4O1xufVxuYnV0dG9uIHtcbiAgICB3aWR0aDogMTQwcHg7XG4gICAgaGVpZ2h0OjY1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDhweDtcbiAgICAvKiBib3JkZXItcmFkaXVzOiA0cHg7ICovXG59XG5cbmJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE4NiwgNywgNyk7XG59XG5cbi5pbnZhbGlkIHtcbiAgICBjb2xvcjpyZWQ7XG4gICAgZm9udC1zaXplOiAxOS42cHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiFA,UAAU,QAAQ,gBAAgB;;;;;;;;ICUvGC,8BAAwD;IACpDA,oCACJ;IAAAA,iBAAM;;;;;IACNA,8BAAuD;IACnDA,4CACJ;IAAAA,iBAAM;;;;;IACNA,8BAAwD;IACpDA,+DACJ;IAAAA,iBAAM;;;;;IATVA,2BAA4D;IACxDA,0EAEM;IACNA,0EAEM;IACNA,0EAEM;IACVA,iBAAM;;;;IATIA,eAAgC;IAAhCA,2FAAgC;IAGhCA,eAA+B;IAA/BA,0FAA+B;IAG/BA,eAAgC;IAAhCA,2FAAgC;;;ADRlD,OAAM,MAAOC,kBAAkB;EAG7B,IAAIC,KAAK;IACP,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,OAAO,CAAgB;EAC9C;EAEAC,YAAoBC,EAAe,EAAUC,IAAe;IAAxC,OAAE,GAAFD,EAAE;IAAuB,SAAI,GAAJC,IAAI;EAGjD;EAEA;EACAC,QAAQ;IACN,IAAI,CAACL,IAAI,GAAG,IAAI,CAACG,EAAE,CAACG,KAAK,CAAC;MACxBP,KAAK,EAAC,CAAC,EAAE,EAAE,CAACH,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACY,OAAO,CAAC,+CAA+C,CAAC,CAAC;KACtG,CAAC;EACJ;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,QAAQ;IACNC,OAAO,CAACC,GAAG,EAAE;EACf;;AArCWb,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/BnB,8BAAuB;MACnBA,6BAAyB;MACzBA,8BAAwB;MAEhBA,qDAAqC;MAAAA,iBAAK;MAC9CA,0BAAI;MAAAA,+CAA+B;MAAAA,iBAAK;MACxCA,yBAAG;MAAAA,oFAAoE;MAAAA,iBAAI;MAC3EA,+BAAmD;MAA1BA;QAAA,OAAcoB,cAAU;MAAA,EAAC;MAClDpB,4BAA+F;MAC/FA,+BAAQ;MAAAA,8BAAa;MAAAA,iBAAS;MAC9BA,qEAUM;MACNA,iBAAO;;;MAdDA,eAAkB;MAAlBA,oCAAkB;MAGlBA,eAAoD;MAApDA,iFAAoD","names":["Validators","i0","SearchBarComponent","email","form","get","constructor","fb","http","ngOnInit","group","required","pattern","onSubmit","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/yuxinfang/Downloads/angular-8z1wnn/FRE-Training-011623/TeamEEProject/src/app/search-bar/search-bar.component.ts","/Users/yuxinfang/Downloads/angular-8z1wnn/FRE-Training-011623/TeamEEProject/src/app/search-bar/search-bar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { debounce, debounceTime, map, Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent implements OnInit {\n  form!:FormGroup\n\n  get email(): FormControl {\n    return this.form.get(\"email\") as FormControl;\n  }\n\n  constructor(private fb: FormBuilder, private http:HttpClient,\n    ){\n\n  }\n\n  // if we have backend, adding another validator [this.checkEmail.bind(this)]\n  ngOnInit(): void { \n    this.form = this.fb.group({\n      email:[\"\", [Validators.required, Validators.pattern(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)],]\n    })\n  }\n\n  // checkEmail(control: AbstractControl): Observable<ValidationErrors | null> {\n  //   const val = control.value;\n  //   const url = 'http://localhost:4231/auth/check-email';\n\n  //   return this.http.post(url, { email:val }).pipe(\n  //     debounceTime(500),\n  //     map((data:any) => {\n  //       console.log(data)\n  //       if (data) {\n  //         return {hasEmail: true};\n  //       }\n  //       return null;\n  //     })\n  //   );\n  // }\n\n  onSubmit() {\n    console.log();\n  }\n\n}\n\n\n// interface AsyncValidatorFn {\n//   (control: AbstractControl):\n//     | Promise<ValidationErrors | null>\n//     | Observable<ValidationErrors | null>;\n// }\n","\n<div class=\"container\">\n    <app-navbar></app-navbar>\n    <div class=\"search-box\">\n        \n        <h1>Unlimited movies, TV shows, and more.</h1>\n        <h2>Watch anywhere. Cancel anytime.</h2>\n        <p>Ready to watch? Enter your email to create or reset your membership.</p>\n        <form [formGroup]=\"form\" (ngSubmit) = \"onSubmit()\">\n        <input type=\"text\" id=\"email\" formControlName=\"email\" name=\"email\" placeholder=\"Email address\"> \n        <button>Get Started ></button>\n        <div *ngIf=\"!email.valid && (email.dirty || email.touched)\">\n            <div *ngIf=\"email.errors?.['required']\" class=\"invalid\">\n                Email is required.\n            </div>\n            <div *ngIf=\"email.errors?.['pattern']\" class=\"invalid\">\n                Please input a valid email                                   \n            </div>\n            <div *ngIf=\"email.errors?.['hasEmail']\" class=\"invalid\">\n                This email is already exist, try another one!                                \n            </div>\n        </div>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}